static gxSurf offs = gxSurf(1440, 900, 32);
static gxSurf back = gxSurf("asset/image/forest.jpg", 32);
static gxSurf draw = gxSurf("asset/image/david.png", 32);

static uint32 lut[256];
for (int i = 0; i < 256; i += 1) {
	//~ int g = i / 2;
	int g = i - 1;
	if (g < 0) { g = 0; }
	lut[i] = (((g << 8) | g) << 8) | g;
}

int onEvent(int action, int button, int x, int y) {
	static gxRect roi = {x: 30, y: 30, w: 120, h: 120 };
	if (action == Gui.KEY_PRESS) {
		if (button == 27) {
			return -1;
		}
		if (button == ' ') {
			offs.lookup(null, lut);
		}
		if (x == 's' && (y & Gui.KEY_MASK_CONTROL) != 0) {
			trace("dumping screen");
			offs.saveBmp("out/dump.bmp", 0);
		}
		struct Event {
			char button;
			char x;
			char y;
		}
		Event event = {
			button: button, x: x, y: y
		};
		trace("event", event);
	}

	if (action == Gui.MOUSE_PRESS) {
		offs.zoomSurf(null, back, null, 1);
		action = Gui.MOUSE_MOTION;
	}
	if (action == Gui.MOUSE_MOTION) {
		if (button == 1) {
			offs.copySurf(x, y, draw, null);
		}
		if (button == 2) {
			offs.copySurf(x, y, draw, roi);
		}
	}

	/* 
	static int64 millis = 0;
	inline animateSpeed = 20;
	int64 now = System.millis();
	if (now - millis > animateSpeed) {
		offs.lookup(null, lut);
		millis = now;
	}
	return animateSpeed;
	// */

	return 0;
}
onEvent(Gui.MOUSE_PRESS, 0, 0, 0);
offs.show(onEvent);
offs.saveBmp("out/dump.bmp", 0);
offs.destroy();
back.destroy();
draw.destroy();

// Hue saturation brightness demo.

gxSurf font = gxSurf.openFnt("asset/font/modern-1.fnt");
gxSurf surf = gxSurf("asset/image/forest.png", 32);
gxSurf offs = gxSurf(surf);
gxSurf blur = gxSurf(surf);

inline blur(gxSurf surf, int radius) = surf.blur(radius, 0.3 * (radius - 1) + 0.8);

int onEvent(int action, int button, int x, int y);
offs.show(onEvent);

blur.destroy();
offs.destroy();
surf.destroy();
font.destroy();

int onEvent(int action, int button, int x, int y) {
	inline "lib/micro.ui.ci";

	static Checker autoUpdate = {
		text: "auto update";
		checked: true;
	};
	static Slider amount = {
		text: "amount";
		minValue: 0;
		maxValue: 512;
	};
	static Slider radius = {
		text: "radius";
		value: 50;
		divValue: 10;
		minValue: 0;
		maxValue: 200;
	};
	static Slider time = {
		text: "time";
		enabled: false;
	};
	static Layout layout = Layout(offs, font, autoUpdate, amount, radius, time);

	static int oldRadius = 0;

	bool reCalculate = action == Gui.WINDOW_INIT;
	if (uiEvent(layout, action, button, x, y)) {
		reCalculate = true;
	}
	else if (action == Gui.KEY_PRESS) {
		if (button == 27) {
			return -1;
		}
		if (button == '\r') {
			amount.value = 0;
			radius.value = 50;
			reCalculate = true;
		}
		if (button == ' ') {
			trace("dumping screen");
			offs.saveBmp("out/dump.bmp", 0);
		}
	}

	if (reCalculate) {
		// clamp input values
		int amountValue = amount.val();
		int radiusValue = radius.val();

		uint64 start = System.millis();
		offs.resize(null, surf, null, 1);
		if (autoUpdate.checked) {
			if (oldRadius != radiusValue) {
				oldRadius = radiusValue;
				blur.copy(0, 0, surf, null);
				blur.blur(radiusValue);
			}
			offs.blend(0, 0, blur, null, -amountValue, null);
		}
		offs.drawHist(null, 0x00ffffff);
		time.value = System.millis() - start;

		layout.draw(30, 30);
	}

	return 0;
}

//inline "/cmplGfx/lib/emulated/draw.ci";
// draw line work in progress
void drawLine2(Image img, int x0, int y0, int x1, int y1, uint32 color) {
	if (x0 == x1 || y0 == y1) {
		// horizontal or vertical line and avoid division by zero
		img.fillRect(x0, y0, x1, y1, color);
		return;
	}

	int dx = x1 - x0;
	int dy = y1 - y0;

	if (y0 > y1) {
		int y = y0;
		y0 = y1 + 1;
		y1 = y + 1;
		x0 = x1 - Math.sign(dx);
	}

	if (Math.abs(dx) < Math.abs(dy)) {
		// todo: find a better way
		dx -= Math.sign(dx);
		dy -= Math.sign(dy);
	}

	dx = (dx << 16) / dy;
	int x = (x0 << 16) + 0x8000;
	for (int y = y0; y < y1; y += 1) {
		x0 = x >> 16;
		x += dx;
		x1 = x >> 16;
		img.fill(x0, y, x1, y, color);
	}
}

static Image offscreen = Image(800, 800, 32);
static Image image = Image(64, 64, 32);
int onEvent(int action, int button, int ex, int ey) {
	static int ox = offscreen.width() / 2;
	static int oy = offscreen.height() / 2;
	static int x[2] = {ox, ox * 4 / 2};
	static int y[2] = {oy, oy * 4 / 2};
	static int idx = -1;
	static int mode = 4;
	static bool aa = false;
	static bool txt = true;
	static bool rect = true;
	static bool grid = true;
	static bool line = true;

	if (action == Gui.KEY_RELEASE && button == 27) {
		// exit when releasing escape key
		return -1;
	}
	if (action == Gui.KEY_PRESS) {
		if (button == 'a') {
			aa = !aa;
		}
		if (button == 't') {
			txt = !txt;
		}
		if (button == 'r') {
			rect = !rect;
		}
		if (button == 'g') {
			grid = !grid;
		}
		if (button == 'l') {
			line = !line;
		}
		if (button == '\t') {
			mode += 1;
		}
		if (button >= '0' && button < '0' + x.length) {
			idx = button - '0';
		}
	}
	if (action == Gui.MOUSE_PRESS || action == Gui.FINGER_PRESS) {
		idx = 1;
		inline dst(int dx, int dy) = float.sqrt(dx * dx + dy * dy);
		inline dst(int i, int cx, int cy) = dst(x[i] - cx, y[i] - cy);
		for (int i = 0; i < x.length; i += 1) {
			int len = dst(i, ex, ey);
			if (len < 25 && len < dst(idx, ex, ey)) {
				idx = i;
			}
		}
		ox = ex;
		oy = ey;
	}
	if (action == Gui.MOUSE_MOTION || action == Gui.FINGER_MOTION) {
		if (idx >= 0 && idx < x.length) {
			x[idx] += ex - ox;
			y[idx] += ey - oy;
		}

		ox = ex;
		oy = ey;
	}
	if (action == Gui.MOUSE_RELEASE || action == Gui.FINGER_RELEASE) {
		// release selected index
		idx = -1;
	}

	int x0 = x[0] * image.width() / offscreen.width();
	int y0 = y[0] * image.height() / offscreen.height();
	int x1 = x[1] * image.width() / offscreen.width();
	int y1 = y[1] * image.height() / offscreen.height();

	image.fill(0xffffff);
	if (rect) {
		image.fillRect(x0, y0, x1, y1, 0xa0ffa0);
		image.drawRect(x0, y0, x1, y1, 0x00ff00);
	}
	if (mode == 0) {
		image.fillRect(x0, y0, x1, y1, 0x9a67be);
	}
	else if (mode == 1) {
		image.drawRect(x0, y0, x1, y1, 0x9a67be);
	}
	else if (mode == 2) {
		image.fillOval(x0, y0, x1, y1, aa, 0x9a67be);
	}
	else if (mode == 3) {
		image.drawOval(x0, y0, x1, y1, aa, 0x9a67be);
	}
	else if (mode == 4) {
		image.drawLine(x0, y0, x1, y1, aa, 0x9a67be);
	}
//	else if (mode == 5) {
//		image.drawLine2(x0, y0, x1, y1, 0x9a67be);
//	}
	else {
		mode = 0;
		return 1;
	}

	offscreen.transform(null, image, null, 0, null);
	float64 sx = float64(offscreen.width()) / image.width();
	float64 sy = float64(offscreen.height()) / image.height();
	if (grid && sx > 0 && sy > 0) {
		for(int i = 0; i < image.height(); i += 1) {
			int y = i * sy;
			offscreen.fill(0, y, offscreen.width(), y, 0x70ff70);
		}
		for(int i = 0; i < image.width(); i += 1) {
			int x = i * sx;
			offscreen.fill(x, 0, x, offscreen.height(), 0x70ff70);
		}
	}
	if (txt) {
		FormatFlags flags = {};
		char text[1024] = {};
		Rect rect = {};
		int p = 0;
		p = text.append(0, "(");
		p = text.append(p, x0, flags);
		p = text.append(p, ", ");
		p = text.append(p, y0, flags);
		p = text.append(p, ")");
		Gui.font.clipText(&rect, text);
		x0 = Math.min(x[0], offscreen.width() - rect.w);
		y0 = Math.min(y[0], offscreen.height() - rect.h);
		offscreen.drawText(x0, y0, Gui.font, text, 0);

		p = text.append(0, "(");
		p = text.append(p, x1, flags);
		p = text.append(p, ", ");
		p = text.append(p, y1, flags);
		p = text.append(p, ")");
		Gui.font.clipText(&rect, text);
		x1 = Math.min(x[1], offscreen.width() - rect.w);
		y1 = Math.min(y[1], offscreen.height() - rect.h);
		offscreen.drawText(x1, y1, Gui.font, text, 0);
	}
	if (line && sx > 0 && sy > 0) {
		x0 = x[0] - x[0] % sx;
		y0 = y[0] - y[0] % sy;
		x1 = x[1] - x[1] % sx;
		y1 = y[1] - y[1] % sy;
		offscreen.drawLine(x0, y0, x1, y1, true, 0);
	}
	return 0;
}

onEvent(Gui.MOUSE_MOTION, 0, 0, 0);
Gui.showWindow(offscreen, onEvent);
offscreen.destroy();
image.destroy();


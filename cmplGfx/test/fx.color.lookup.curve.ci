// Color levels demo.

gxSurf back = gxSurf("asset/image/forest.png", 32);
gxSurf font = gxSurf.openFnt("asset/font/modern-1.fnt");
gxSurf offs = gxSurf(back.width(), back.height(), back.depth());


int onEvent(int action, int button, int x, int y);
offs.show(onEvent);
offs.destroy();
back.destroy();
font.destroy();

int onEvent(int action, int button, int x, int y) {
	inline "/lib/gfx/micro.ui.ci";

	static Button btnLum = {
		text: "luminosity";
	};
	static Button btnRgb = {
		text: "rgb";
	};
	static Button btnRed = {
		text: "red";
	};
	static Button btnGreen = {
		text: "green";
	};
	static Button btnBlue = {
		text: "blue";
	};

static void onCurveReset(View this);
	static Button btnReset = {
		text: "reset";
		selectable: false;
		onClick: onCurveReset;
	};

static void onCurveUpdate(View this, int idx, int value);
	static Histogram histogram = {
		text: null;
		image: offs;
		height: 128;
		enabled: false;
	};
	static Histogram curves = {
		text: null;
		image: offs;
		height: 128;
		lines: true;
		selectable: false;
		onUpdate: onCurveUpdate;
	};

	static Slider time = {
		text: "time";
		enabled: false;
	};

	static Layout ui = Layout(offs, -30, 30, font,
		histogram, curves,
		btnLum, btnRgb,
		btnRed, btnGreen, btnBlue,
		btnReset,
		time
	);

static void onCurveUpdate(View this, int idx, int value) {
	Histogram item = this.as(Histogram);
	argb data& = item.data[idx];

	if (ui.isSelected(btnLum)) {
		data.a = clamp_s8(value);
		return;
	}
	if (ui.isSelected(btnRed)) {
		data.r = clamp_s8(value);
		return;
	}
	if (ui.isSelected(btnGreen)) {
		data.g = clamp_s8(value);
		return;
	}
	if (ui.isSelected(btnBlue)) {
		data.b = clamp_s8(value);
		return;
	}
	// rgb
	data.r = data.g = data.b = clamp_s8(value);
}
static void onCurveReset(View this) {
	for (int i = 0; i < 256; i += 1) {
		curves.data[i] = uint32(argb(i, i, i, i));
	}
}

	if (action == Gui.WINDOW_INIT) {
		onCurveReset(curves);
		ui.setSelected(null);
	}

	if (action == Gui.KEY_PRESS) {
		if (button == 27) {
			return -1;
		}
	}

	if (ui.uiEvent(action, button, x, y)) {
		uint64 start = System.millis();
		offs.resize(null, back, null, 1);
		offs.colorMap(null, curves.data);
		offs.calcHist(null, 0x00ffffff, histogram.data);

		time.value = System.millis() - start;
		ui.draw();
	}
	return 0;
}

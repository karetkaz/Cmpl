/* bezier curve demo
 * click and drag a control point
 * use keyboard keys 0, 1, 2, 3 to select control point
 */
Image offs = Image(1440, 900, 32);

int idx = 0;
int x[4]; // TODO: = {100, 100, 100, 100};
int y[4]; // TODO: = {100, 100, 100, 100};
x[0] = 100; x[1] = 400; x[2] = 700; x[3] = 400;
y[0] = 100; y[1] = 100; y[2] = 400; y[3] = 400;

int onEvent(int action, int button, int ex, int ey) {
	static int ox = 0;
	static int oy = 0;

	if (action == Gui.FINGER_MOTION) {
		action = Gui.MOUSE_MOTION;
	}
	if (action == Gui.FINGER_PRESS) {
		action = Gui.MOUSE_PRESS;
	}
	if (action == Gui.KEY_PRESS) {
		if (button == 27) {
			return -1;
		}
		if (button >= '0' && button < '0' + x.length) {
			idx = button - '0';
		}
	}
	if (action == Gui.MOUSE_PRESS) {
		idx = 0;
		inline dst(int dx, int dy) = float.sqrt(dx * dx + dy * dy);
		inline dst(int i, int cx, int cy) = dst(x[i] - cx, y[i] - cy);
		for (int i = 1; i < x.length; i += 1) {
			int len = dst(i, ex, ey);
			if (len < 25 && len < dst(idx, ex, ey)) {
				idx = i;
			}
		}
		ox = ex;
		oy = ey;
	}
	if (action == Gui.MOUSE_MOTION) {
		if (idx >= 0 && idx < x.length) {
			x[idx] += ex - ox;
			y[idx] += ey - oy;
		}

		inline R = 2;
		inline controlColor = 0x00ff00;
		inline bezierColor = 0xffffff;

		offs.fillRect(0, 0, 65535, 65535, 0x00000000);

		// draw control lines
		offs.drawLine(x[0], y[0], x[1], y[1], controlColor);
		offs.drawLine(x[3], y[3], x[2], y[2], controlColor);

		// draw control points
		offs.drawOval(x[0] - R, y[0] - R, x[0] + R, y[0] + R, controlColor);
		offs.drawOval(x[1] - R, y[1] - R, x[1] + R, y[1] + R, controlColor);
		offs.drawOval(x[2] - R, y[2] - R, x[2] + R, y[2] + R, controlColor);
		offs.drawOval(x[3] - R, y[3] - R, x[3] + R, y[3] + R, controlColor);

		// draw bezier curve
		offs.drawBezier(x[0], y[0], x[1], y[1], x[3], y[3], x[2], y[2], bezierColor);
		ox = ex;
		oy = ey;
	}

	return 0;
}

onEvent(Gui.MOUSE_MOTION, 0, 0, 0);
offs.show(onEvent);
offs.destroy();

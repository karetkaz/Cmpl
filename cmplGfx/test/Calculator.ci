// Simple Calculator with no precedence

inline "/cmplGfx/lib/micro.ui.ci";
Style display = {
	font: Image.openTtf("asset/font/NokiaPureText.ttf", 48);
	align: Style.right;
	format: { precision: 10; };
};
Style global = {
	font: Image.openTtf("asset/font/NokiaPureText.ttf", 24);
	align: Style.center;
	format: {};
};

char result[256] = {'0', 0};
char operation = '=';
float64 value = 0;
bool clear = true;

bool onResult(Button this) {
	if (operation == 0) {
		// value already calculated
	}
	else if (operation == '=') {
		value = float64(result);
		operation = 0;
	}
	else if (operation == '+') {
		value += float64(result);
		operation = 0;
	}
	else if (operation == '-') {
		value -= float64(result);
		operation = 0;
	}
	else if (operation == '*' || operation == '\xd7') {
		value *= float64(result);
		operation = 0;
	}
	else if (operation == '/' || operation == '\xf7') {
		value /= float64(result);
		operation = 0;
	}

	// make sure all operators were handled
	assert(operation == 0);
	clear = true;

	// check for errors (not a number, infinity)
	if (value != value) {
		result.append(0, "Error");
	}
	else if (value < 0 && value == 2 * value) {
		result.append(0, "-Inf");
	}
	else if (value > 0 && value == 2 * value) {
		result.append(0, "Inf");
	}
	else {
		result.append(0, value, display.format);
	}
	return true;
}
bool onClear(Button this) {
	result.append(0, "0");
	operation = '=';
	value = 0;
	clear = true;
	return true;
}
bool onValue(Button this) {
	int len = length(result);
	if (clear) {
		clear = false;
		len = 0;
	}
	result.append(len, this.text);
	return true;
}
bool onNeg(Button this) {
	int len = length(result);
	if (result[0] == '-') {
		for (int i = 1; i < len; i += 1) {
			result[i - 1] = result[i];
		}
		result[len - 1] = 0;
	} else {
		for (int i = len; i > 0; i -= 1) {
			result[i] = result[i - 1];
		}
		result[len + 1] = 0;
		result[0] = '-';
	}
	return true;
}
bool onOp(Button this) {
	assert(this.text.length() == 1);
	if (clear) {
		// keep the last clicked operator
		operation = this.text[0];
		return true;
	}
	onResult(this);
	operation = this.text[0];
	return true;
}
bool onFn(Button this) {
	if (this.text.equals("sqrt")) {
		// precalculate last operation onResult(this);
		value = float64.sqrt(float64(result));
	}
	else {
		value = Math.nan;
	}
	operation = 0;
	return onResult(this);
}

Button btnResult = {
	text: result;
	enabled: false;
	style: display;
};

Button buttons[] = {
	{text: "\xb1", onClick: onNeg}, // ±
	{text: "sqrt", onClick: onFn},  // todo: √
	{text: "", enabled: false},  // todo: %
	{text: "C", onClick: onClear},

	{text: "7", onClick: onValue},
	{text: "8", onClick: onValue},
	{text: "9", onClick: onValue},
	{text: "\xf7", onClick: onOp}, // '/' | '÷'

	{text: "4", onClick: onValue},
	{text: "5", onClick: onValue},
	{text: "6", onClick: onValue},
	{text: "\xd7", onClick: onOp}, // '*' | '×'

	{text: "1", onClick: onValue},
	{text: "2", onClick: onValue},
	{text: "3", onClick: onValue},
	{text: "-", onClick: onOp},

	{text: "0", onClick: onValue},
	{text: ".", onClick: onValue},
	{text: "=", onClick: onOp},
	{text: "+", onClick: onOp}
};

global.setColor(gray(200), gray(20));
display.setColor(gray(120), gray(200));

Gui.showWindow(Widget(300, 400, global).focus(null).addItems(
	btnResult, Layout.Custom(4, Style.fill, ...buttons)
));

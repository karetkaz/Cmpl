// CLion.Arguments: -X-stdin+steps -std$PROJECT_DIR$/lib/stdlib.ci -run $PROJECT_DIR$/bin/libGfx.so $PROJECT_DIR$/cmplGfx/gfxlib.ci test.ci
// CLion.Directory: $PROJECT_DIR$/cmplGfx/test

//inline "2d.ComplexPlane.ci";
//inline "2d.image.diff.ci";
//inline "2d.drawSurf.ci";

//inline "fx.color.blend.ci";
//inline "fx.color.matrix.ci";
//inline "fx.color.lookup.ci";
//inline "fx.color.equalize.ci";

//inline "3d.draw.mesh.ci";
//inline "pd.blob.ci";

//* test the generated events
static int onEvent(pointer closure, int action, int button, int x, int y) {
	struct Event {
		char actionName[*];
		int action;
		int button;
		int x;
		int y;
	}
	Event event = {
		actionName: null;
		action: action;
		button: button;
		x: x;
		y: y;
	};
	int result = 0;
	if (action == Gui.KEY_PRESS) {
		event.actionName = "KEY_PRESS";
		if (button == 27) {
			result = -1;
		}
	}
	else if (action == Gui.KEY_RELEASE) {
		event.actionName = "KEY_RELEASE";
	}
	else if (action == Gui.MOUSE_PRESS) {
		event.actionName = "MOUSE_PRESS";
	}
	else if (action == Gui.MOUSE_RELEASE) {
		event.actionName = "MOUSE_RELEASE";
	}
	else if (action == Gui.MOUSE_MOTION) {
		event.actionName = "MOUSE_MOTION";
	}
	else if (action == Gui.EVENT_TIMEOUT) {
		event.actionName = "EVENT_TIMEOUT";
	}
	else if (action == Gui.WINDOW_CLOSE) {
		event.actionName = "WINDOW_CLOSE";
	}
	else if (action == Gui.WINDOW_ENTER) {
		event.actionName = "WINDOW_ENTER";
	}
	else if (action == Gui.WINDOW_LEAVE) {
		event.actionName = "WINDOW_LEAVE";
	}

	debug("event", event);
	return result;
}
gxSurf image = gxSurf(256, 256, 32);
Gui.showWindow(image, null, onEvent);
image.destroy();
// */

// CLion.Arguments: -X-stdin+steps -std$PROJECT_DIR$/cmplStd/stdlib.ci -run $PROJECT_DIR$/bin/libGfx.so testGfx.ci
// CLion.Directory: $PROJECT_DIR$/cmplGfx/test

//inline "../todo/ImageEditor.ci";
//inline "../todo/ColorPicker.ci";
//inline "demo/DatePicker.ci";
//inline "demo/Calculator.ci";
//inline "fx.image.transform.ci";
//inline "fx.color.lookup.ci";
//inline "fx.color.lookup-ease.ci";
//inline "fx.color.lookup-levels.ci";
//inline "fx.color.lookup-manual.ci";
//inline "fx.color.matrix.ci";
//inline "fx.color.select-hsl.ci";
//inline "fx.color.blend.ci";
//inline "fx.image.blur.ci";
//inline "fx.histogram.ci";
//inline "pd.blob.ci";

//* test the generated events
static Image image = Image(512, 512, 32);
static int onEvent(int action, int button, int x, int y) {
	struct Event {
		char actionName[*];
		int action;
		int button;
		char char;
		int x;
		int y;
	}
	Event event = {
		actionName: null;
		action: action;
		button: button;
		char: button;
		x: x;
		y: y;
	};
	if (action == Gui.KEY_PRESS) {
		event.actionName = "KEY_PRESS";
		if (button == 27) {
			return -1;
		}
	}
	else if (action == Gui.KEY_RELEASE) {
		event.actionName = "KEY_RELEASE";
	}
	else if (action == Gui.MOUSE_PRESS) {
		event.actionName = "MOUSE_PRESS";
	}
	else if (action == Gui.MOUSE_MOTION) {
		event.actionName = "MOUSE_MOTION";
	}
	else if (action == Gui.MOUSE_RELEASE) {
		event.actionName = "MOUSE_RELEASE";
	}
	else if (action == Gui.FINGER_PRESS) {
		event.actionName = "FINGER_PRESS";
	}
	else if (action == Gui.FINGER_MOTION) {
		event.actionName = "FINGER_MOTION";
	}
	else if (action == Gui.FINGER_RELEASE) {
		event.actionName = "FINGER_RELEASE";
	}
	else if (action == Gui.EVENT_TIMEOUT) {
		event.actionName = "EVENT_TIMEOUT";
	}
	else if (action == Gui.WINDOW_INIT) {
		event.actionName = "WINDOW_INIT";
	}
	else if (action == Gui.WINDOW_CLOSE) {
		event.actionName = "WINDOW_CLOSE";
	}
	else if (action == Gui.WINDOW_ENTER) {
		event.actionName = "WINDOW_ENTER";
	}
	else if (action == Gui.WINDOW_LEAVE) {
		event.actionName = "WINDOW_LEAVE";
	}

	debug("event", event);
	static if (true) {
		inline "/cmplGfx/lib/micro.ui.ci";
		static char actionText[32] = {0};
		static Button btnAction = {
			enabled: false;
			text: actionText;
			width: 192;
		};
		static Slider sldAction = {
			onDrawSlider: null;
			enabled: false;
			text: "action";
		};
		static Slider sldButton = {
			onDrawSlider: null;
			enabled: false;
			text: "button";
		};
		static Slider sldX = {
			onDrawSlider: null;
			enabled: false;
			text: "x";
		};
		static Slider sldY = {
			onDrawSlider: null;
			enabled: false;
			text: "y";
		};
		static Slider sldKeyRepeat = {
			onDrawSlider: null;
			enabled: false;
			text: "keyRepeat";
		};
		static Slider sldClicks = {
			onDrawSlider: null;
			enabled: false;
			text: "clicks";
		};
		static Widget ui = Widget(image,
			btnAction,
			sldAction,
			sldButton,
			sldX,
			sldY,
			sldKeyRepeat,
			sldClicks
		);

		ui.onEvent(action, button, x, y);
		actionText.append(0, event.actionName);
		sldAction.value = action;
		sldButton.value = button;
		sldX.value = x;
		sldY.value = y;
		sldKeyRepeat.value = ui.repeat;
		sldClicks.value = ui.clicks;
		return ui.draw();
	}

	return 20000;	// 20 sec timeout
}
image.show(onEvent);
image.destroy();
// */

// Color levels demo.

gxSurf back = gxSurf("asset/image/forest.png", 32);
gxSurf font = gxSurf.openFnt("asset/font/modern-1.fnt");
gxSurf offs = gxSurf(back.width(), back.height(), back.depth());

void levels(uint32 lut[256], int input, int output) {
	argb lut2[*] = lut;

	int mid1 = input > 0 ? 0 : 255;
	int mid2 = output < 0 ? 0 : 255;
	input = 256 + (input < 0 ? input : -input);
	output = 256 - (output < 0 ? -output : output);
	for (int idx = 0; idx < lut.length; idx += 1) {
		int val = idx;
		// TODO: val = (output * (val - mid)) / input + mid;
		val = (output * (val - mid2)) / 256 + mid2;
		val = (val - mid1) * 255 / input + mid1;
		int rgb = grayClamp(val);
		lut2[idx].r = rgb;
		lut2[idx].g = rgb;
		lut2[idx].b = rgb;
		lut2[idx].a = 0;
	}
}


int onEvent(int action, int button, int x, int y);
offs.show(onEvent);
offs.destroy();
back.destroy();
font.destroy();

int onEvent(int action, int button, int x, int y) {
	inline "/lib/gfx/micro.ui.ci";

	static Slider sldInput = {
		text: "input";
		minimum: -255;
		maximum: 255;
	};
	static Slider sldOutput = {
		text: "output";
		minimum: -256;
		maximum: 256;
	};

	static Slider time = {
		text: "time";
		enabled: false;
	};

	static Layout ui = Layout(offs, font, sldInput, sldOutput, time);

	bool redraw = uiEvent(ui, action, button, x, y);
	if (action == Gui.KEY_PRESS) {
		if (button == 27) {
			return -1;
		}
		if (button == ' ') {
			redraw = true;
		}
	}
	if (redraw) {
		uint64 start = System.millis();
		uint32 lut[256];
		levels(lut, sldInput.val(), sldOutput.val());
		offs.resize(null, back, null, 1);
		offs.colorMap(null, lut, false);
		offs.drawHist(null, 0x00ffffff, lut);

		time.value = System.millis() - start;
		ui.draw(30, 30);
	}
	return 0;
}

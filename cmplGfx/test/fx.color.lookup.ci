// Brightness contrast gamma demo.

gxSurf back = gxSurf("asset/image/forest.png", 32);
gxSurf font = gxSurf.openFnt("asset/font/modern-1.fnt");
gxSurf offs = gxSurf(back.width(), back.height(), back.depth());

void brightnessContrastGamma(uint32 lut[256], int brightness, int contrast, double gamma) {
	double cval = (256 + contrast) / 256.;
	double gval = 1. / gamma;

	for (int idx = 0; idx < lut.length; idx += 1) {
		lut[idx] = uint32(gray(brightness + int(256 * (cval * (float64.pow(idx / 256., gval) - .5) + .5))));
	}
}

int onEvent(int action, int button, int x, int y);
offs.show(onEvent);
offs.destroy();
back.destroy();
font.destroy();

int onEvent(int action, int button, int x, int y) {
	inline "lib/micro.ui.ci";

	static Slider brightness = {
		text: "brightness";
		value: 0;
		minValue: -256;
		maxValue: 256;
	};
	static Slider contrast = {
		text: "contrast";
		value: 0;
		minValue: -512;
		maxValue: 512;
	};
	static Slider gamma = {
		text: "gamma";
		value: 100;
		minValue: 1;
		maxValue: 1000;
	};
	static Slider time = {
		text: "time";
		enabled: false;
	};

	static Layout ui = Layout(offs, font, brightness, contrast, gamma, time);
	bool redraw = action == Gui.WINDOW_INIT;

	if (uiEvent(ui, action, button, x, y)) {
		redraw = true;
	}
	else if (action == Gui.KEY_PRESS) {
		if (button == 27) {
			return -1;
		}
		if (button == '\r') {
			brightness.value = 0;
			contrast.value = 0;
			gamma.value = 100;
			redraw = true;
		}
		if (button == ' ') {
			trace("dumping screen");
			offs.saveBmp("out/dump.bmp", 0);
		}
	}

	if (redraw) {
		uint64 start = System.millis();
		uint32 lut[256];
		brightnessContrastGamma(lut, brightness.val(), contrast.val(), gamma.val() / 100.);
		offs.resize(null, back, null, 1);
		offs.colorMap(null, lut);
		offs.drawHist(null, 0x00ffffff);

		time.value = System.millis() - start;
		ui.draw(30, 30);
	}

	return 0;
}

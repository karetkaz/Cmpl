//~ memory allocation tests

struct intptr: 0 { int32 int; pointer ptr; }

void testDeallocation(int allocMegs, int reallocMegs, int freeOrder) {
	pointer p1 = malloc(1 << allocMegs);
	pointer p2 = malloc(2 << allocMegs);
	pointer p3 = malloc(3 << allocMegs);

	//~ memmgr(null, 0);
	if (reallocMegs > 0) {
		p1 = realloc(p1, 1 << reallocMegs);
		p2 = realloc(p2, 2 << reallocMegs);
		p3 = realloc(p3, 3 << reallocMegs);
	}

	//~ memmgr(null, 0);
	if (freeOrder == 1) {
		p3 = free(p3);
		p2 = free(p2);
		p1 = free(p1);
	}
	else if (freeOrder == 2) {
		p3 = free(p3);
		p1 = free(p1);
		p2 = free(p2);
	}
	else if (freeOrder == 3) {
		p2 = free(p2);
		p3 = free(p3);
		p1 = free(p1);
	}
	else if (freeOrder == 4) {
		p2 = free(p2);
		p1 = free(p1);
		p3 = free(p3);
	}
	else if (freeOrder == 5) {
		p1 = free(p1);
		p2 = free(p2);
		p3 = free(p3);
	}
	//~ memmgr(null, 0);
}

testDeallocation(10, 8, 1);
testDeallocation(10, 8, 2);
testDeallocation(10, 8, 3);
testDeallocation(10, 8, 4);
testDeallocation(10, 8, 5);
testDeallocation(10, 8, 1);
testDeallocation(10, 8, 2);
testDeallocation(10, 8, 3);
testDeallocation(10, 8, 4);
testDeallocation(10, 8, 5);

//~ intptr p2;
//~ pointer p = malloc(100);
//~ p2.ptr = p;
//? p2.int += 1;
//~ free(p2.ptr);

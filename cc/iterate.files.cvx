// declare that file is iterable :)define iterator(File &file) = (file);// iterate by charsbool next(File &file, char &value) {	int ch = File.Read(file);	result = ch != -1;	if (result) {		value = ch;	}}// iterate by linesbool next(File &file, char buff[]) {	assert(buff.length > 1);	int max = buff.length - 1;	int pos = 0;	result = false;	for (; pos < max; pos += 1) {		int chr = File.Read(file);		buff[pos] = chr;		if (chr == '\n' || chr == '\r') {			if (chr == '\r') {				chr = File.Peek(file);				if (chr == '\n') {					File.Read(file);				}			}			// end of line			buff[pos + 1] = 0;			return true;		}		if (chr < 0) {			// end of file			buff[pos] = 0;			return result;		}		result = true;	}	// end of buff (line is splitted)	buff[pos] = 0;	//~ trace("line did not fit in the buffer", emit(variant, ref(buff), typename(string)));	trace("line did not fit in the buffer", variant(string(buff)));	return true;}bool next2(File &file, char buff[]) {	return File.ReadLine(file, buff) > 0;}define printin = !false;/+ iterate file by charsFile file1 = File.Open("History.txt");for (char chr : file1) {	static if (printin) {		print("(");	}	print("%c", chr);	static if (printin) {		print(")");	}}File.Close(file1);//~ +///~ /+ iterate file by linesFile file2 = File.Open("History.txt");for (char str[70] : file2) {	static if (printin) {		print("[");	}	print(string(str));	static if (printin) {		print("]");	}}File.Close(file2);//~ +//+ copy file with iteratorFile file3 = File.Open("History.txt");File fileO = File.Create("History2.txt");for (char chr : file3) {	File.Write(fileO, chr);}File.Close(fileO);File.Close(file3);//~ +/
//~ linux: ./main -c -x -i./gl.so $(FileNameExt)
//~ windows: start main -c -x -i./gl.dll $(FileNameExt)

struct pp {
	float x;
	float y;
}
pp pos[3]; // = {pp(0, 1), pp(-1, -1), pp(1, -1)};

pos[0] = pp(0, 1);
pos[1] = pp(-1, -1);
pos[2] = pp(1, -1);

int maxx = 0;
int maxy = 0;

void mouse(int btn, int x, int y) {
	if (btn > 0 && btn <= 4) {
		pos[btn-1].x = -(1 - x / (.5 * maxx));
		pos[btn-1].y = 1 - y / (.5 * maxy);
		glut.PostRedisplay();
	}
	//~ print("mouse\n");
}

void keyboard(int key) {
	if (key == 27) {
		system.Exit(0);
	}
	//~ print("keyboard(%d)\n", int64(key));
}

void display() {
	gl.Clear(gl.ColorBuffer);
	gl.Begin(gl.Polygon);

		gl.Color(1, 0, 0);
		gl.Vertex(pos[0].x, pos[0].y, 0);
		gl.Color(0, 1, 0);
		gl.Vertex(pos[1].x, pos[1].y, 0);
		gl.Color(0, 0, 1);
		gl.Vertex(pos[2].x, pos[2].y, 0);
	gl.End();
	gl.Flush();
	//~ print("display\n");
}

void display2() {

	void ellipse(double &x, double &y, double &z, double s01, double t01) {
		define X = 1;
		define Y = 1;
		define Z = 1;
		define smin = 0.;
		define smax = 2 * Math.pi;
		define tmin = -Math.pi / 2;
		define tmax = +Math.pi / 2;

		double s = lerp(s01, smin, smax);
		double t = lerp(t01, tmin, tmax);

		x = X * cos(t) * cos(s);
		y = Y * cos(t) * sin(s);
		z = Z * sin(t);
	}

	// make color from a normal
	void nrm2col(double &r, double &g, double &b, double x, double y, double z) {
		r = .5 * (x + 1.);
		g = .5 * (y + 1.);
		b = .5 * (z + 1.);
	}

	// x, y, z 
	define fun3d(double x, double y, double z, double s, double t) = ellipse(&x, &y, &z, s, t);

	gl.Clear(gl.ColorBuffer);
	const division = 64;
	double step = 1. / division;
	for (double t = 0; t < 1; t += step) {
		for (double s = 0; s < 1; s += step) {
			double x = s;
			double y = t;
			double z = 0;
			double r;
			double g;
			double b;

			gl.Begin(gl.Quads);

				fun3d(&x, &y, &z, s, t);
				nrm2col(&r, &g, &b, x, y, z);
				gl.Color(r, g, b);
				gl.Vertex(x, y, z);

				fun3d(&x, &y, &z, s, t + step);
				nrm2col(&r, &g, &b, x, y, z);
				gl.Color(r, g, b);
				gl.Vertex(x, y, z);

				fun3d(&x, &y, &z, s + step, t + step);
				nrm2col(&r, &g, &b, x, y, z);
				gl.Color(r, g, b);
				gl.Vertex(x, y, z);

				fun3d(&x, &y, &z, s + step, t);
				nrm2col(&r, &g, &b, x, y, z);
				gl.Color(r, g, b);
				gl.Vertex(x, y, z);

			gl.End();
		}
	}
	gl.Flush();

	static if (!true) {	// fps
		static int clk = 0;
		static int fps = 0;

		fps += 1;
		int now = Hi64(timeNow());
		if (clk != now) {
			print("fps: %d\n", int64(fps));
			clk = now;
			fps = 0;
		}
		glut.PostRedisplay();
	}
	//~ print("display\n");
}
void reshape(int x, int y) {
	maxx = x;
	maxy = y;
	gl.Viewport(0, 0, x, y);
	//~ print("reshape\n");
	glut.PostRedisplay();
}

glut.Mouse(mouse);
glut.Motion(mouse);
glut.Keyboard(keyboard);

glut.Display(display2);
glut.Reshape(reshape);

// this wont let wmExec to exit.
glut.MainLoop();

/* iteratingstruct range {	int min;	int max;}struct rangeIterator {	int pos;	int max;	int Value;}define iterator(range ^r) = rangeIterator(r.min, r.max, 0);	// start at min, and end at maxvoid printIT(int ri) {	print("iterator {%d}\n", int64(ri));}bool next(rangeIterator &it) {	result = it.pos < it.max;	if (result != false) {		it.Value = it.pos;		it.pos += 1;	}	return result;}for (rangeIterator it : range(10, 13)) {	printIT(it.Value);}bool next(rangeIterator &it, int &val) {	result = it.pos < it.max;	if (result != false) {		val = it.pos;		it.pos += 1;	}	return result;}for (int it : range(10, 13)) {	printIT(it);}//~ for (int it, rangeIterator .it = iterator(range(10, 13)); next(.it, &it); ) .../+ enable iterating an iteratordefine iterator(rangeIterator ^r) = (r);for (rangeIterator it : rangeIterator(10, 13, 8)) {	printIT(it.Value);}+///~ *///~ /* iterate filesdefine iterator(File &file) = (file);// iterate by linesbool next(File &file, char buff[]) {	assert(buff.length > 1);	int pos = 0;	//~ buff[(pos += 1) - 1] = '>';	int max = buff.length - 1;	result = false;	for (; pos < max; pos += 1) {		int chr = File.Read(file);		buff[pos] = chr;		if (chr == '\n' || chr == '\r') {			if (chr == '\r') {				chr = File.Peek(file);				if (chr == '\n') {					File.Read(file);				}			}			// end of line			buff[pos + 1] = 0;			return true;		}		if (chr < 0) {			// end of file			buff[pos] = 0;			return result;		}		result = true;	}	// end of buff (line was splitted)	buff[pos] = 0;	return true;}// iterate by charsbool next(File &file, char &value) {	int ch = File.Read(file);	result = ch != -1;	if (result) {		value = ch;	}}//~ bool next(File &file, char buff[]) {return File.ReadLine(file, buff) > 0;}define printin = false;//~ /+ iterate file by charsFile file1 = File.Open("History.txt");for (char chr : file1) {	static if (printin) {		print("(");	}	print("%c", chr);	static if (printin) {		print(")");	}}File.Close(file1);//~ +///~ /+ iterate file by linesFile file2 = File.Open("History.txt");for (char str[1024] : file2) {	static if (printin) {		print("[");	}	print(string(str));	static if (printin) {		print("]");	}}File.Close(file2);//~ +//+ iterate file by lines2void printFileByLines() {	File file2 = File.Open("History.txt");	for (char str[10] : file2) {		print(string(str));	}	File.Close(file2);}void f1() {	printFileByLines();}void f2() {	f1();}f2();//~ +//+ copy file with iteratorFile file3 = File.Open("History.txt");File fileO = File.Create("History2.txt");for (char chr : file3) {	File.Write(fileO, chr);}File.Close(fileO);File.Close(file3);//~ +///~ */struct hex32: int32; //%%08x
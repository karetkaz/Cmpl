split.vertical=0
line.margin.visible=1
line.margin.width=3+

buffered.draw=1
two.phase.draw=1

tabsize=4
indent.size=4
use.tabs=1

fold=1
fold.flags=16
fold.compact=0
fold.symbols=3
fold.on.open=0
fold.comment=1
fold.preprocessor=1

wrap=0

find.files=*

view.whitespace=1
whitespace.fore=#9f9f9f
if PLAT_WIN
	font.base=font:Courier New,size:12
if PLAT_GTK
	font.base=font:!DejaVu Sans Mono,size:12
	#~ font.base=font:!Courier 10 Pitch BT,size:12

font.small=font.base
font.comment=font.base
font.code.comment.box=$(font.comment)
font.code.comment.line=$(font.comment)
font.code.comment.doc=$(font.comment)
font.code.comment.nested=$(font.comment)
font.text=font.base
font.text.comment=font.base
font.embedded.base=font.base
font.embedded.comment=font.base
font.monospace=font.base
font.vbs=font.base

title.full.path=1
title.show.buffers=1

load.on.activate=1
check.if.already.open=1
reload.preserves.undo=1
are.you.sure.on.reload=1

time.commands=1
clear.before.execute=1
ensure.final.line.end=1
ensure.consistent.line.ends=1

open.dialog.in.file.directory=1
autocompleteword.automatic=1
autocomplete.choose.single=0

statusbar.text.1={$(FileNameExt):$(LineNumber):$(ColumnNumber):$(SelLength)} \
$(NbOfLines) lines $(BufferLength) chars. [$(OverType)] [$(EOLMode)]

command.name.22.*=ArtisticStyle
command.22.*=astyle --style=java -Fp -T4 $(FileNameExt)
command.quiet.22.*=1
command.is.filter.22.*=1
command.save.before.22.*=1
command.shortcut.22.*=Ctrl+Alt+F

open.filter=\
All Source|*.c;*.h;*.cvx;makefile|\
$(all.files)\


# C file override

if PLAT_GTK
	make.command=make
if PLAT_WIN
	make.command=mingw32-make

#~ command.compile.*.c=gcc -ggdb $(FileNameExt) -o $(FileName)
command.compile.*.c=gcc -m32 -c -Wall $(FileNameExt)
#~ command.compile.*.c=lcc -c $(FileNameExt)
command.build.*.c;*.h=$(make.command)
#~ command.go.*.c;*.h=../Debug/main

command.name.1.*.c;*.h=Clean
command.shortcut.1.*.c;*.h=Shift+F7
command.1.*.c;*.h=$(make.command) clean

command.name.2.*.c;*.h=Rebuild
command.shortcut.2.*.c;*.h=Ctrl+Shift+F7
command.2.*.c;*.h=$(make.command) build

command.name.3.*.c;*.h=Debug
command.shortcut.3.*.c;*.h=Ctrl+F5
command.3.*.c;*.h=$(make.command) debug

command.name.4.*.c;*.cpp=Dasm
command.shortcut.4.*.c;*.cpp=Ctrl+Shift+F5
command.4.*.c;*.cpp=obj2asm $(FileName).o

# Cvx file override
ccvm.fext=*.cvx

if PLAT_GTK
	ccvm.exec=Debug/main
if PLAT_WIN
	ccvm.exec=Debug/main.exe

exec.cc=$(ccvm.exec) -c
exec.vm=$(ccvm.exec) -c -x
lexer.$(ccvm.fext)=d

command.compile.$(ccvm.fext)=$(exec.cc) $(FileNameExt)
command.build.$(ccvm.fext)=./main
command.go.$(ccvm.fext)=$(exec.vm)d $(FileNameExt)
command.go.needs.$(ccvm.fext)=

command.name.0.$(ccvm.fext)=Tags
command.shortcut.0.$(ccvm.fext)=Shift+F7
command.0.$(ccvm.fext)=$(exec.cc) -t $(FileNameExt)

command.name.1.$(ccvm.fext)=Decompile
command.shortcut.1.$(ccvm.fext)=Ctrl+Shift+F7
command.1.$(ccvm.fext)=$(exec.cc) $(FileNameExt) -o $(FileName).xml -c7f
#~ command.1.$(ccvm.fext)=$(exec.cc) $(FileNameExt) -c

command.name.2.$(ccvm.fext)=Disassemble
command.shortcut.2.$(ccvm.fext)=Ctrl+Shift+F5
command.2.$(ccvm.fext)=$(exec.cc) -s30 $(FileNameExt)

command.name.3.$(ccvm.fext)=Debug
command.shortcut.3.$(ccvm.fext)=Ctrl+F5
command.3.$(ccvm.fext)=$(exec.vm)D $(FileNameExt)

keywords.$(ccvm.fext)=\
if for else return \
void bool int long float double string \
define enum emit class this struct \
static parallel \

keywords2.$(ccvm.fext)=\
int8 int16 int32 int64 \
uns8 uns16 uns32 \
flt32 flt64 \
math

api.$(ccvm.fext)=./api.api
autocomplete.$(ccvm.fext).ignorecase=0
autocomplete.$(ccvm.fext).start.characters=.(
autocomplete.$(ccvm.fext).fillups=(
autocomplete.$(ccvm.fext).single=0

calltip.$(ccvm.fext).ignorecase=0
calltip.$(ccvm.fext).word.characters=._ $(chars.alpha)$(chars.numeric)

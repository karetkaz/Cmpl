// test the emit intrinsic of the language

int32 emitldz32 = emit(load.z32);
int64 emitldz64 = emit(load.z64);

int32 emitA = 42;
int32 emitB = 96;

int32 emitAddI32 = emit(int32(emitA), int32(emitB), add.i32);
int32 emitDivI32 = emit(int32(10), int32(5), div.i32);
float32 emitNfcF32 = emit(float32(3.14/2), float32.sin);

/*
// emit a floating point number and interpret it as an integer
inline floatAsInt32(float32 value) = int32(emit(float32(value)));
inline floatAsInt64(float64 value) = int64(emit(float64(value)));

int32 emitFloatAsInt1 = floatAsInt32(500);
int64 emitFloatAsInt2 = floatAsInt32(500);
int32 emitFloatAsInt3 = floatAsInt64(500);
int64 emitFloatAsInt4 = floatAsInt64(500);

// create a slice with runtime length set to 3, from the given character sequence
char emitSlice[] = emit(int(3), "string");
*/

// these should not compile
//int64 i64Zero = emit(load.z32);	// error: invalid assignment/initialization: size of variable is different from the value's
//int32 i32Zero = emit(load.z64);	// error: invalid assignment/initialization: size of variable is different from the value's


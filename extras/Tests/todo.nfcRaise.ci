// TODO: test builtin native raise function

inline trace(char message[*], variant inspect) = raise(verbose, message, inspect, defTrace);
inline trace(char message[*]) = raise(verbose, message, null, defTrace);
inline trace(variant inspect) = raise(verbose, null, inspect, defTrace);

inline debug(char message[*], variant inspect) = raise(debug, message, inspect, noTrace);
inline debug(char message[*]) = raise(debug, message, null, noTrace);
// FIXME: inline debug(variant inspect) = raise(debug, null, inspect, noTrace);

inline info(char message[*], variant inspect) = raise(info, message, inspect, noTrace);
inline info(char message[*]) = raise(info, message, null, noTrace);

inline warn(char message[*], variant inspect) = raise(warn, message, inspect, noTrace);
inline warn(char message[*]) = raise(warn, message, null, noTrace);

inline error(char message[*], variant inspect) = raise(error, message, inspect, defTrace);
inline error(char message[*]) = raise(error, message, null, defTrace);

inline abort(char message[*], variant inspect) = raise(abort, message, inspect, defTrace);
inline abort(char message[*]) = raise(abort, message, null, defTrace);

inline abort() = raise(abort, "execution aborted!", null, defTrace);

inline assert(bool condition, char message[*], variant inspect) = void(condition ? void(0) : abort(message, inspect));
inline assert(bool condition, char message[*]) = void(condition ? void(0) : abort(message));
inline assert(bool condition) = void(condition ? void(0) : abort("assertion failed!"));


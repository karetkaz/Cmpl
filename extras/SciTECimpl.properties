cimpl.fext=*.ci;

api.$(cimpl.fext)=stdlib.api

lexer.$(cimpl.fext)=d

lexer.d.track.preprocessor=0

fold.d.explicit.start=//#{
fold.d.explicit.end=//#}

calltip.d.word.characters=._$(chars.alpha)$(chars.numeric)
calltip.d.end.definition=
calltip.d.ignorecase=1

autocomplete.d.start.characters=.(
autocomplete.d.ignorecase=1
autocomplete.d.fillups=(

keywords.$(cimpl.fext)=\
break const continue else emit enum\
for if inline operator parallel\
return static struct\

# types, aliases and builtins
keywords2.$(cimpl.fext)=\
void bool char int8 int16 int32 int64\
uint8 uint16 uint32 uint64 float32 float64\
pointer variant typename fuction object\
int long byte float double true false null\
raise tryExec

#~ autocomplete.$(cimpl.fext).ignorecase=1
#~ autocomplete.$(cimpl.fext).start.characters=.(
#~ autocomplete.$(cimpl.fext).fillups=(
#~ autocomplete.$(cimpl.fext).single=0
#~ calltip.$(cimpl.fext).ignorecase=1
#~ calltip.$(cimpl.fext).word.characters=._$(chars.alpha)$(chars.numeric)

# install type system only
#~ cimpl.exec.flags=-X+glob-emit-ptr-var-obj -std
cimpl.exec.flags=-std

command.build.$(cimpl.fext)=make -C src clean build
command.compile.$(cimpl.fext)=$(cimpl.exec) "$(FileNameExt)"
command.go.$(cimpl.fext)=$(cimpl.exec) -run "$(FileNameExt)"

command.name.0.$(cimpl.fext)=Tags
command.shortcut.0.$(cimpl.fext)=Shift+F7
command.0.$(cimpl.fext)=$(cimpl.exec) -api "$(FileNameExt)"

command.name.1.$(cimpl.fext)=Source
command.shortcut.1.$(cimpl.fext)=Ctrl+Shift+F7
command.1.$(cimpl.fext)=$(cimpl.exec) -ast "$(FileNameExt)"

command.name.2.$(cimpl.fext)=Disassemble
command.shortcut.2.$(cimpl.fext)=Ctrl+Shift+F5
command.2.$(cimpl.fext)=$(cimpl.exec) -asm/a/n/s "$(FileNameExt)"

command.name.3.$(cimpl.fext)=Debug
command.shortcut.3.$(cimpl.fext)=Ctrl+F5
command.3.$(cimpl.fext)=$(cimpl.exec) -log out/out.cvx -ast -asm -debug "$(FileNameExt)"

# C/C++ file override
c.fext=*.c;*.h;*.i;

lexer.c.track.preprocessor=0
fold.c.explicit.start=//#{
fold.c.explicit.end=//#}

if PLAT_GTK
	make.command=make
if PLAT_WIN
	make.command=mingw32-make

command.compile.*.c=gcc -c -Wall -Wpadded $(FileNameExt)
command.build.$(c.fext)=$(make.command)
command.build.$(cimpl.fext)=$(make.command) -C src build
command.clean.$(cimpl.fext)=$(make.command) -C src clean

command.name.2.$(c.fext)=Clean
command.shortcut.2.$(c.fext)=Shift+F7
command.2.$(c.fext)=$(make.command) clean

command.name.3.$(c.fext)=Rebuild
command.shortcut.3.$(c.fext)=Ctrl+Shift+F7
command.3.$(c.fext)=$(make.command) clean build

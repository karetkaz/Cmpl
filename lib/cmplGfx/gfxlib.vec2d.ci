struct vec2d {
	float64 x;
	float64 y;
}

vec2d vec2d(float64 x, float64 y) {
	return {
		x: x;
		y: y;
	};
}

inline sub(vec2d a, vec2d b) = vec2d(emit(struct(a), struct(b), sub.p2d));
inline dot(const vec2d a&, const vec2d b&) = a.x * b.x + a.y * b.y;

/*vec2d sub(const vec2d a&, const vec2d b&) {
	return {
		x: a.x - b.x;
		y: a.y - b.y;
	};
}

float64 dot(const vec2d a&, const vec2d b&) {
	return a.x * b.x + a.y * b.y;
}
// */
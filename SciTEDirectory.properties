cmpl.fext=*.ci;

api.$(cmpl.fext)=$(SciteDirectoryHome)/extras/stdlib.api

lexer.$(cmpl.fext)=d

lexer.d.track.preprocessor=0
fold.d.explicit.start=//#{
fold.d.explicit.end=//#}

calltip.d.word.characters=._$(chars.alpha)$(chars.numeric)
calltip.d.end.definition=
calltip.d.ignorecase=1

autocomplete.d.start.characters=.(
autocomplete.d.ignorecase=1
autocomplete.d.fillups=(

# keywords
keywords.$(cmpl.fext)= \
break const continue else emit enum \
for if inline operator parallel \
return static struct \

# builtin types, aliases and functions
keywords2.$(cmpl.fext)= \
void bool char int8 int16 int32 int64 \
uint8 uint16 uint32 uint64 float32 float64 \
pointer variant typename function object \
int long byte float double true false null \
raise tryExec

# deprecated keywords
keywords6.$(cmpl.fext)= \
define

# C/C++ file override
c.fext=*.c;*.h;*.i;

lexer.c.track.preprocessor=0
fold.c.explicit.start=//#{
fold.c.explicit.end=//#}

# install type system only
cmpl.exec.flags=-std

command.compile.$(c.fext)=gcc -c -Wall -Wpadded $(FileNameExt)
command.compile.$(cmpl.fext)=$(cmpl.exec) "$(FileNameExt)"
command.build.$(c.fext)=$(make.command) build
command.build.$(cmpl.fext)=$(make.command) build
command.clean.$(c.fext)=$(make.command) clean
command.clean.$(cmpl.fext)=$(make.command) clean
command.go.$(c.fext)=
command.go.$(cmpl.fext)=$(cmpl.exec) -run "$(FileNameExt)"
command.go.$(cmpl.fext)=$(cmpl.exec) -debug/g "$(FileNameExt)"

command.name.0.$(cmpl.fext)=Tags
command.shortcut.0.$(cmpl.fext)=Shift+F7
command.0.$(cmpl.fext)=$(cmpl.exec) -api "$(FileNameExt)"

command.name.1.$(cmpl.fext)=Debug
command.shortcut.1.$(cmpl.fext)=Ctrl+F5
command.1.$(cmpl.fext)=$(cmpl.exec) -api/m -asm/a/n/s -debug/g/h/p "$(FileNameExt)"

command.name.2.$(cmpl.fext)=Disassemble
command.shortcut.2.$(cmpl.fext)=Ctrl+Shift+F5
command.2.$(cmpl.fext)=$(cmpl.exec) -asm/a/n/s "$(FileNameExt)"

if PLAT_GTK
	make.command=make -C $(SciteDirectoryHome)/src
	cmpl.exec=$(SciteDirectoryHome)/out/cmpl $(cmpl.exec.flags)
if PLAT_WIN
	make.command=mingw32-make -C $(SciteDirectoryHome)/src
	cmpl.exec=$(SciteDirectoryHome)/out/cmpl.exe $(cmpl.exec.flags)

ccvm.fext=*.cvx;*.gxs;*.gxc;

lexer.$(ccvm.fext)=d

lexer.d.track.preprocessor=0

fold.d.explicit.start=//#{
fold.d.explicit.end=//#}

calltip.d.word.characters=._$(chars.alpha)$(chars.numeric)
calltip.d.end.definition=
calltip.d.ignorecase=1

autocomplete.d.start.characters=.(
autocomplete.d.ignorecase=1
autocomplete.d.fillups=(

keywords.$(ccvm.fext)=\
const static parallel \
enum struct define operator \
if for else return break continue emit

# types, aliases and builtins
keywords2.$(ccvm.fext)=\
void bool pointer variant typename \
int8 int16 int32 int64 \
uint8 uint16 uint32 \
float32 float64 \
int long float double char string \
result null true false
#~ debug trace assert

#~ autocomplete.$(ccvm.fext).ignorecase=1
#~ autocomplete.$(ccvm.fext).start.characters=.(
#~ autocomplete.$(ccvm.fext).fillups=(
#~ autocomplete.$(ccvm.fext).single=0
#~ calltip.$(ccvm.fext).ignorecase=1
#~ calltip.$(ccvm.fext).word.characters=._$(chars.alpha)$(chars.numeric)

# C/C++ file override
c.fext=*.c;*.h;*.i;

lexer.c.track.preprocessor=0
fold.c.explicit.start=//#{
fold.c.explicit.end=//#}

if PLAT_GTK
	make.command=make
if PLAT_WIN
	make.command=mingw32-make

command.compile.*.c=gcc -c -Wall -Wpadded $(FileNameExt)
command.build.$(c.fext)=$(make.command)
command.build.$(ccvm.fext)=$(make.command) -C src build
command.clean.$(ccvm.fext)=$(make.command) -C src clean

command.name.2.$(c.fext)=Clean
command.shortcut.2.$(c.fext)=Shift+F7
command.2.$(c.fext)=$(make.command) clean

command.name.3.$(c.fext)=Rebuild
command.shortcut.3.$(c.fext)=Ctrl+Shift+F7
command.3.$(c.fext)=$(make.command) clean build



# Ui overrides
split.vertical=0
line.margin.visible=1
line.margin.width=3+

buffered.draw=1
two.phase.draw=1

tabsize=4
indent.size=4
use.tabs=1

fold=1
fold.flags=16
fold.compact=0
fold.symbols=3
fold.on.open=0
fold.comment=1
fold.preprocessor=1

wrap=0

find.files=*

view.whitespace=1
whitespace.fore=#9f9f9f

title.full.path=1
title.show.buffers=1

load.on.activate=1
check.if.already.open=1
reload.preserves.undo=1
are.you.sure.on.reload=1

time.commands=1
clear.before.execute=1
ensure.final.line.end=1
ensure.consistent.line.ends=1

open.dialog.in.file.directory=1

statusbar.visible=1
statusbar.text.1=$(FileNameExt):$(LineNumber):$(ColumnNumber), Lines: $(SelHeight)/$(NbOfLines), Chars: $(SelLength)/$(BufferLength), Lexer: `$(Language)`, Api: `$(APIPath)`.[$(OverType)] [$(EOLMode)]

/* known errors:
	Invalid state
	Invalid memory access
	Invalid instruction
	Stack Overflow
	Division by Zero
	External call aborted execution
*/

void empty(pointer ptr) {
}

void stackOverflow(pointer ptr) {
	//byte data[7 << 20];
	stackOverflow(ptr);
}

void divisionByZero(pointer args) {
	int value = 3 / 0;
}

void abortExecution(pointer args) {
	struct NotEquals {
		char message[*];
		int expected;
		int returned;
	}
	NotEquals details;
	details.message = "assertion failed";
	details.expected = 97;
	details.returned = 77;
	raise(raise.abort, raise.noTrace, "fatal error", details);
}

void invalidMemoryAccess(pointer args) {
	int32 i32Ref& = null;
	int i32Val = i32Ref;
}

void invalidInstruction(pointer args) {
	emit(load.z32, ret);
}

int err0 = tryExec(null, empty);
int err1 = tryExec(null, null);
int err2 = tryExec(null, stackOverflow);
int err3 = tryExec(null, divisionByZero);
int err4 = tryExec(null, invalidInstruction);
int err5 = tryExec(null, invalidMemoryAccess);
int err6 = tryExec(null, abortExecution);

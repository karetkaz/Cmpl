// test inline arguments

inline zero(int a, int b) = 0;	// params not used at all
inline last(int a, int b) = b;	// only one param used
inline sum(int a, int b) = a + b;	// both param used once
inline any(int a, int b) = a ? a : b;	// one param used 2x, the other once
inline min(int a, int b) = a < b ? a : b;	// both param used 2x
inline max(int a, int b) = a > b ? a : b;	// both param used 2x

int i3 = 3;
int i6 = 6;
int i2 = 2;
int i8 = 8;

int zeroVal = zero(3, 6);
int zeroVar = zero(i3, i6);
int zeroXpr = zero(i3 + 1, i6 + 1);

int lastVal = last(3, 6);
int lastVar = last(i3, i6);
int lastXpr = last(i3 + 1, i6 + 1) - 1;

int sum2Val = sum(3, 6);
int sum2Var = sum(i3, i6);
int sum2Xpr = sum(i3 + 1, i6 + 1) - 2;

int any2Val = any(3, 6);
int any2Var = any(i3, i6);
int any2Xpr = any(i3 + 1, i6 + 1) - 1;

int min2Val = min(3, 6);
int min2Var = min(i3, i6);
int min2Xpr = min(i3 + 1, i6 + 1) - 1;

int max2Val = max(3, 6);
int max2Var = max(i3, i6);
int max2Xpr = max(i3 + 1, i6 + 1) - 1;

inline sumLr(int a, int b, int c, int d) = sum(a, sum(b, sum(c, d)));
inline sumRl(int a, int b, int c, int d) = sum(sum(sum(a, b), c), d);
int sumRlVal = sumLr(3, 6, 2, 8);
int sumLrVal = sumRl(3, 6, 2, 8);
int sumRlVar = sumLr(i3, i6, i2, i8);
int sumLrVar = sumRl(i3, i6, i2, i8);
int sumRlXpr = sumLr(i3 + 1, i6 + 1, i2 + 1, i8 + 1) - 4;
int sumLrXpr = sumRl(i3 + 1, i6 + 1, i2 + 1, i8 + 1) - 4;

inline anyLr(int a, int b, int c, int d) = any(a, any(b, any(c, d)));
inline anyRl(int a, int b, int c, int d) = any(any(any(a, b), c), d);
int anyRlVal = anyLr(3, 6, 2, 8);
int anyLrVal = anyRl(3, 6, 2, 8);
int anyRlVar = anyLr(i3, i6, i2, i8);
int anyLrVar = anyRl(i3, i6, i2, i8);
int anyRlXpr = anyLr(i3 + 1, i6 + 1, i2 + 1, i8 + 1) - 1;
int anyLrXpr = anyRl(i3 + 1, i6 + 1, i2 + 1, i8 + 1) - 1;

inline minLr(int a, int b, int c, int d) = min(a, min(b, min(c, d)));
inline minRl(int a, int b, int c, int d) = min(min(min(a, b), c), d);
int minRlVal = minLr(3, 6, 2, 8);
int minLrVal = minRl(3, 6, 2, 8);
int minRlVar = minLr(i3, i6, i2, i8);
int minLrVar = minRl(i3, i6, i2, i8);
int minRlXpr = minLr(i3 + 1, i6 + 1, i2 + 1, i8 + 1) - 1;
int minLrXpr = minRl(i3 + 1, i6 + 1, i2 + 1, i8 + 1) - 1;

inline maxLr(int a, int b, int c, int d) = max(a, max(b, max(c, d)));
inline maxRl(int a, int b, int c, int d) = max(max(max(a, b), c), d);
int maxRlVal = maxLr(3, 6, 2, 8);
int maxLrVal = maxRl(3, 6, 2, 8);
int maxRlVar = maxLr(i3, i6, i2, i8);
int maxLrVar = maxRl(i3, i6, i2, i8);
int maxRlXpr = maxLr(i3 + 1, i6 + 1, i2 + 1, i8 + 1) - 1;
int maxLrXpr = maxRl(i3 + 1, i6 + 1, i2 + 1, i8 + 1) - 1;

// to force the pre-calculation of inline arguments, just declare them as const references.
// inline max(const int a&, const int b&) = a > b ? a : b;

// TODO: force arguments to be inline, to be evaluated each time they are used?
// inline min(inline int a, inline int b) = a < b ? a : b;

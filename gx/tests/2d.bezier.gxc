// bezier demo.
enum Window {
	draw = RenderMode.swap_buff | RenderMode.zero_cbuf;
	resx = 512;
	resy = resx;
}

struct Position {
	int x;
	int y;
}

define points = 4;
define scale(int precent) = int(precent * Window.resx / 100);

Position positions[points] = {
	Position(scale(10), scale(90)),
	Position(scale(40), scale(90)),
	Position(scale(40), scale(10)),
	Position(scale(90), scale(90)),
};

bool reDraw = true;
bool drawControls = true;

void mouseCB(int btn, int x, int y) {
	static int ox;
	static int oy;
	if (Mouse.dblClick(btn, x, y)) {
		Mouse.dblClick(-1, 0, 0);			// disable multi clicks
		drawControls = !drawControls;
		reDraw = true;
	}
	if (btn > 0 && btn <= positions.length) {
		positions[btn - 1].x -= ox - x;
		positions[btn - 1].y -= oy - y;
		reDraw = true;
	}
	ox = x;
	oy = y;
}

void drawCB() {
	define drawOval(gxSurf dst, Position &p, int s, int color) = drawOval(offScreen, p.x - s / 2, p.y - s / 2, p.x + s / 2, p.y + s / 2, color);

	if (drawControls) {
		for (int i = 0; i < positions.length; i += 1) {
			drawOval(offScreen, positions[i], 5, 0xffffff);
		}
	}

	static if (points == 3) {
		drawBezier(offScreen, positions[0].x, positions[0].y, positions[1].x, positions[1].y, positions[2].x, positions[2].y, 0xff00ff);
	}
	static if (points == 4) {
		if (drawControls) {
			drawLine(offScreen, positions[0].x, positions[0].y, positions[1].x, positions[1].y, gray(128));
			drawLine(offScreen, positions[2].x, positions[2].y, positions[3].x, positions[3].y, gray(128));
		}
		drawBezier(offScreen, positions[0].x, positions[0].y, positions[1].x, positions[1].y, positions[2].x, positions[2].y, positions[3].x, positions[3].y, 0xff00ff);
	}
	reDraw = false;
}

Gui.setMouseHandler(mouseCB);
Gui.setDrawCallback(drawCB);

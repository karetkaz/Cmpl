// Image histogram demo.
enum Window {
	draw = RenderMode.swap_buff;
	resx = 512;
	resy = resx;
}

//~ string fileName = "media/images/David.png";
string fileName = "media/images/lenaRGB.png";
//~ string fileName = "media/images/download.jpg";
//~ string fileName = "media/images/dino-blue.jpg";
//~ string fileName = "media/images/Earth.jpg";
//~ string fileName = "media/images/nol.bmp";

int reDraw = 1;
gxSurf image = gxSurf(fileName);
gxSurf lui = gxSurf(256, 123);
gxClut lut;
gxRect roi = gxRect(0, 0, Window.resx, Window.resy);

histoLut(&lut, image, true);
gxSurf image1 = zoomSurf(gxSurf(Window.resx, Window.resy), null, image, null, 1);
copySurf(image1, Window.resx - 266, 10, lut2Surf(lui, &lut, true), null);

lutEqualize(&lut);
clutSurf(image, null, &lut);

histoLut(&lut, image, true);
gxSurf image2 = zoomSurf(gxSurf(Window.resx, Window.resy), null, image, null, 1);
copySurf(image2, Window.resx - 266, 10, lut2Surf(lui, &lut, true), null);

void drawCB() {
	if (reDraw == 1) {
		copySurf(offScreen, 0, 0, image1, null);
		reDraw := 0;
	}
	else if (reDraw == 2) {
		copySurf(offScreen, 0, 0, image2, null);
		reDraw := 0;
	}
	else if (reDraw == 3) {
		roi.x = Math.clamp(roi.x, 0, width(image) - roi.w);
		roi.y = Math.clamp(roi.y, 0, height(image) - roi.h);
		copySurf(offScreen, 0, 0, image, roi);
		reDraw := 0;
	}
}

void mouseCB(int btn, int x, int y) {
	static int old_btn;
	static int old_x;
	static int old_y;
	if (btn != old_btn) {
		reDraw := btn + 1;
	}
	if (btn == 2 && (x != old_x || y != old_y)) {
		reDraw := btn + 1;
	}
	old_btn = btn;
	old_x = roi.x = x;
	old_y = roi.y = y;
}

Gui.setDrawCallback(drawCB);
Gui.setMouseHandler(mouseCB);

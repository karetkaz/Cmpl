// star field
enum Window {
	draw = RenderMode.swap_buff;
	resx = 512;
	resy = 512;
}

struct Star {
	define speed = 1;
	double xpos;
	double ypos;
	double zpos;
}

Star stars[1 * 1024];

void initStar(Star &star, int i) {
	//~ randomly init stars, generate them around the center of the screen
	define scale = double(Window.resx << 11);
	star.xpos = rand(-scale, scale);
	star.ypos = rand(-scale, scale);
	star.zpos = i;
}

int centerx = Window.resx / 2;
int centery = Window.resy / 2;

void mouseCB(int btn, int x, int y) {

	static int ox = 0;
	static int oy = 0;

	if (btn == 1) {
		centerx = x;
		centery = y;
	}
	if (btn == 2) {
		int dx = x - ox;
		int dy = y - oy;
		centerx += dx;
		centery += dy;
	}
	ox = x;
	oy = y;
}
void drawCB() {

	double tempx;
	double tempy;

	// animate
	Gui.Repaint();

	static int wait = 0;
	if ((wait += 1) < 10) {
		return;
	}
	wait = 0;

	//~ clear the screen
	fillRect(offScreen, 0, 0, Window.resx, Window.resy, 0);

	//~ move and draw stars
	for (int i = 0; i < stars.length; i += 1) {

		stars[i].zpos -= Star.speed;

		if (stars[i].zpos <= 0) {
			initStar(&stars[i], i + 1);
		}

		//~ compute 3D position0
		tempx = (stars[i].xpos / stars[i].zpos) + centerx;
		tempy = (stars[i].ypos / stars[i].zpos) + centery;

		//~ check if a star leaves the screen
		if (tempx < 0 || tempx >= Window.resx || tempy < 0 || tempy >= Window.resy) {
			initStar(&stars[i], i + 1);
			continue;
		}

		define ps = Math.max(int32(0x200 / stars[i].zpos), 2);
		fillRect(offScreen, tempx, tempy, tempx + ps, tempy + ps, 0xffffff);
	}

}

Gui.setMouseHandler(mouseCB);
Gui.setDrawCallback(drawCB);

for (int i = 0; i < stars.length; i += 1) {
	initStar(&stars[i], i + 1);
}

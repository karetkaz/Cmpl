enum Window {
	draw = RenderMode.swap_buff;
	resx = 512;
	resy = 512;
}

gxSurf Mandel(gxSurf dst, gxClut &lut, double QMin, double QMax, double PMin, double PMax) {

	define M = 4.;			// It. Limit

	int kmax = lut.count;
	int resx = width(dst);
	int resy = height(dst);

	double xStep = (PMax - PMin) / resx;
	double yStep = (QMax - QMin) / resy;

	for (int sy = 0; sy < resy; sy += 1) {
		double y0 = QMin + sy * yStep;

		for (int sx = 0; sx < resx; sx += 1) {
			double x0 = PMin + sx * xStep;

			double xtemp;
			double x = 0;
			double y = 0;
			int k = 0;

			for (k = 0; k < kmax; k += 1) {
				xtemp = x * x - y * y + x0;
				y = 2 * x * y + y0;
				x = xtemp;

				if (x * x + y * y > M)
					break;
			}

			if (k >= kmax)
				k = 0;

			setPixel(dst, sx, sy, lut.data[k]);
		}
		if (resx > 1000) {
			print("line(%d", sy);
			print(") of %d\n", resy);
		}
	}
	result = dst;
}

gxClut mandelLut;
double QMin = -1.5;
double QMax = +1.5;
double PMin = -2.25;
double PMax = +0.75;
//~ define zoom = 1.17187372574E-2;
//~ double QMin = -1.25632982971-zoom;
//~ double QMax = -1.25632982971+zoom;
//~ double PMin = -0.02761733591558-zoom;
//~ double PMax = -0.02761733591558+zoom;
blendLut(32, &mandelLut, 0xFFFFFF, 0x000000, 0xadadff, 0x000000);

int reDraw = 1;
gxRect roi  = gxRect(Window.resx / 2 - Window.resx / 4, Window.resy / 2 - Window.resy / 4, Window.resx / 2, Window.resy / 2);

gxSurf mand = gxSurf(Window.resx, Window.resy);

void mouseCB(int btn, int x, int y) {
	define scale = 1.4142;
	static int omb = 0;

	if (reDraw == false) {
		int zoom = 0;

		if (btn == 1 || (btn == 0 && omb == 1)) {
			zoom = +1;
		}
		if (btn == 0 && omb == 2) {
			zoom = -1;
		}

		if (zoom == +1) {

			reDraw = 2;
			double dx = (PMax - PMin);
			double dy = (QMax - QMin);

			double X = (2. * x / Window.resx - 1) * dx / 2;
			double Y = (2. * y / Window.resy - 1) * dy / 2;

			dx = dx / (2 * scale);
			dy = dy / (2 * scale);

			if (btn == 0) {
				PMin += X + dx;
				PMax += X - dx;
				QMin += Y + dy;
				QMax += Y - dy;
				reDraw = 1;
			}

			if (true) {
				int dx = Window.resx / 8;
				int dy = Window.resy / 8;
				roi = gxRect(x - dx, y - dy, dx * 2, dy * 2);
			}
		}
		else if (zoom == -1) {
			double dx = (PMax - PMin);
			double dy = (QMax - QMin);
			dx = dx / (2 * scale);
			dy = dy / (2 * scale);

			PMin -= dx;
			PMax += dx;
			QMin -= dy;
			QMax += dy;
			reDraw = true;
		}
		if (btn == 4 || btn == 16) {
			reDraw = 1;
			QMin = -1.5;
			QMax = +1.5;
			PMin = -2.25;
			PMax = +0.75;
		}
	}
	omb = btn;
}
void drawCB() {
	if (reDraw == 2) {
		copySurf(offScreen, 0, 0, mand, null);
		drawRect(offScreen, roi, 0xff0000);
		reDraw = 0;
	}
	if (reDraw == 1) {
		int64 start = clock(0);
		Mandel(mand, &mandelLut, QMin, QMax, PMin, PMax);
		copySurf(offScreen, 0, 0, mand, null);

		print("Mandel(%F", QMin);
		print(", %F", QMax);
		print(", %F", PMin);
		print(", %F", PMax);
		print("): time: %F\n", clocksPerSec(clock(start)));

		reDraw = 0;
	}
}

Gui.setMouseHandler(mouseCB);
Gui.setDrawCallback(drawCB);

//~ bmpWrite(Mandel(gxSurf(2000), &mandelLut, QMin, QMax, PMin, PMax), "mandel.bmp");

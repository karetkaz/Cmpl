// Image blending demo.
enum Window {
	draw = RenderMode.swap_buff;
	resx = 512;
	resy = resx;
}

//~ string fileName = "media/images/David.png";
//~ string fileName = "media/images/lenaRGB.png";
string fileName = "media/images/download.jpg";
//~ string fileName = "media/images/dino-blue.jpg";
//~ string fileName = "media/images/Earth.jpg";
//~ string fileName = "media/images/nol.bmp";
string fileBlend = "media/images/nol.bmp";

define useGradient = !true;
static if (useGradient) {
gxClut lut1;
gxClut lut2;
blendLut(256, &lut1, 0xffffff, 0);
blendLut(256, &lut2, 0, 0xffffff);
gxRect g1 = gxRect(0, Window.resy);
gxRect g2 = gxRect(Window.resx, 0);
gxSurf image1 = gxSurf(Window.resx, Window.resy);
gradSurf(image1, &g1, &lut1, Gradient.Linear, false);
gxSurf image2 = gxSurf(Window.resx, Window.resy);
gradSurf(image2, &g2, &lut2, Gradient.Linear, false);

//~ vec4f hsvOP(float64 x, float64 y) {
	//~ return Hsv2Rgb(vec4f(x, 1 - y, 1));
//~ }
//~ evalSurf(image2, null, hsvOP);
}
static if (!useGradient) {
define resize(gxSurf src, int width, int height) = zoomSurf(gxSurf(width, height), null, src, null, 1);
gxSurf image1 = resize(gxSurf(fileName), Window.resx, Window.resy);
gxSurf image2 = resize(gxSurf(fileBlend), Window.resx, Window.resy);
}

int reDraw = 1;
gxSurf image0 = gxSurf(Window.resx, Window.resy);

void drawCB() {
	if (reDraw == 1) {
		copySurf(offScreen, 0, 0, image0, null);
		reDraw = 0;
	}
	else if (reDraw == 2) {
		copySurf(offScreen, 0, 0, image1, null);
		reDraw = 0;
	}
	else if (reDraw == 3) {
		copySurf(offScreen, 0, 0, image2, null);
		reDraw = 0;
	}
}

void mouseCB(int btn, int x, int y) {
	static int ob;
	static int ox;
	static int oy;
	if (btn != ob) {
		reDraw = btn + 1;
	}
	ox = x;
	oy = y;
	ob = btn;
}

copySurf(image0, 0, 0, image1, null);					// copy base image
copySurf(image0, 0, 0, image2, null, 1, BlendMode.Screen);		// blend base image with second image

Gui.setDrawCallback(drawCB);
Gui.setMouseHandler(mouseCB);

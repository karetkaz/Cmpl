// todo: unfinished implementation
struct Timezone {
	const char name[];		// "UTC", "America/New_York", "Europe/Brussels"
	Duration offset(const Timezone zone&, Timestamp timestamp, bool isDaylightSaving&);

	static Duration offset(const Timezone zone&, Timestamp timestamp) {
		bool isDaylightSaving;
		return zone.offset(zone, timestamp, &isDaylightSaving);
	}

	static Timezone utc() {
		static Duration offset(const Timezone zone&, Timestamp timestamp, bool isDaylightSaving&) {
			isDaylightSaving = false;
			return { value: 0 };
		}
		return {
			offset: offset;
			name: "UTC";
		};
	}

	static Timezone lookup(const char name[]) { abort("todo"); }

	static Timezone local() {
		warn("using fake timezone");	// fixme: fake timezone, needs to be read or lookup from the system
		//static void System.timeInfo(const char timezoneName[*], int64 timeMillis, int64 zoneOffset&, int daylight&) {}
		Duration offset(const Timezone zone&, Timestamp timestamp, bool isDaylightSaving&) {
			isDaylightSaving = false;
			return Duration(3, Timeunit.Hours);
		}
		return {
			offset: offset;
			name: "GMT+3";
		};
	}
}

// Timezone Timezone() {return Timezone.local();}

// Timezone Timezone(const char name[]) { return Timezone.lookup(name);}

// standard library extension

enum: bool {
	true: 0 == 0;
	false: 0 != 0;
}

inline byte = uint8;
inline float = float32;
inline double = float64;

inline "lib/lang/Integer.ci";       // integer extension methods
inline "lib/lang/Pointer.ci";       // pointer extension methods

/// Returns the size of the given type
inline sizeof(typename type) = typename.size(type);

static if (typename(raise) == function) {
// extension methods for debugging
inline "lib/lang/Debug.ci";
}

inline "lib/math/Math.ci";
//inline "lib/math/Decimal.ci"?;      // -> Decimal
//inline "lib/math/Rational.ci"?;     // -> Rational
inline "lib/math/Complex.ci"?;
inline "lib/math/Vector4f.ci"?;
inline "lib/math/Matrix4f.ci"?;
inline "lib/math/Vector2d.ci"?;
//inline "lib/math/BigInteger.ci?"   // TODO: inline Rational -> BigInteger.Rational<BigInteger>
//inline "lib/math/BigDecimal.ci?"   // TODO: inline Complex -> BigDecimal.Complex<BigDecimal>
//inline "lib/math/Perlin.ci"?;

inline "lib/text/cstr.ci";
